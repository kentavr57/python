__author__ = 'Валерий Сергеевич Коваленко'
# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]
          
# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку

print(">>> Выполнить поворот (транспонирование) матрицы")
matrix_rotate = list(map(list,zip(*matrix)))
print(matrix_rotate)


# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

import re
print(">>> Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе")
found = re.findall(r'0{5}|1{5}|2{5}|3{5}|4{5}|5{5}|6{5}|7{5}|8{5}|9{5}', number)
proizv = [int(x[1])**5 for x in found]
max_pr = max(proizv)
posl = found[proizv.index(max_pr)]
print(f"Произведение равно {max_pr}, \nиндекс смещения первого числа последовательности {posl} равен {number.index(posl)}.")



# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.
print(">>> Ферзи")
from random import randint
#Генерим ферзей (не очень производительно и универсально, зато по теме урока :) )
fr = [str(randint(1,8)*10+randint(1,8)) for _ in range(55)]
fr = list(set(fr))
#Проверка решения когда не бъют друг друга
#fr = ['17', '24', '32', '48', '56', '61', '73', '85']
#Получим список координат ферзей, но с таким списком не удобно работать, лучше взять 2 списка по х и по у

frx = [int(x[0]) for x in fr[:8]]
fry = [int(x[1]) for x in fr[:8]]
frs = [x for x in fr[:8]]
print(f'Координаты ферзей {[[int(x[0]), int(x[1])] for x in fr[:8]]}')
#print(frs)
#print(frx)
#print(fry)
#Нарисуем матрицу для наглядности ( для решения она не нужна)
print('Шахматная доска с ферзями')
matrix = [['-' for _ in range(8)] for _ in range(8)]
for i in range(8):
    for j in range(8):
        if str(j*10+i+11) in frs:
            matrix[i][j] = 'x'
    print(f"{matrix[i]} \n")

#Собственно само решение по проверке
flag = True
#проверим веритикали
if len(list(set(frx))) < 8:
    flag = False
    print('Есть ферзи которые бъют друг друга по вертикали')
# проверим горизонтали
if len(list(set(fry))) < 8:
    flag = False
    print('Есть ферзи которые бъют друг друга по горизонтали')
#создадим списки координат диагоналей для каждого ферзя и проверим пересечение
frd = []
for val in frs:
    val = int(val)
    x = val // 10
    y = val % 10
    per = val
    for _ in range(min(8-x, 8-y)):
        per += 11
        frd.append(str(per))
    per = val
    for _ in range(min(8-x, y-1)):
        per += 9
        frd.append(str(per))
    per = val
    for _ in range(min(x-1, y-1)):
        per -= 11
        frd.append(str(per))
    per = val
    for _ in range(min(x-1, 8-y)):
        per -= 9
        frd.append(str(per))
    if len(set(frd) & set(frs)) > 0:
        flag = False
        print('Есть ферзи которые бъют друг друга по диагонали')
        break
    #print(f' {val} {frd}')

print('YES' if flag else 'NO')
