__author__ = 'Валерий Сергеевич Коваленко'
# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.
# вычислите и выведите y

print("хард-1. вычислите и выведите y")
equation = 'y = -12x + 11111140.2121'
x = 2.5
print(f"Уравнение : {equation}")
print(f"При х = {x}")
per = equation.split(" ")


def found_x(par, x):
    if "x" in par:
        par = par[:-1]
        return float(par) * x
    else:
        return float(par)


if per[3] == "+":
    per = found_x(per[2], x)+found_x(per[4], x)
elif per[3] == "-":
    per = found_x(per[2], x)-found_x(per[4], x)
elif per[3] == "*":
    per = found_x(per[2], x)*found_x(per[4], x)
elif per[3] == "/":
    per = found_x(per[2], x)/found_x(per[4], x)
else:
    print(f"Неудалось распознать оператор {per[3]}")
print(f"Ответ: y = {per}")






# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
#date = '01.11.1985'

# Примеры некорректных дат
#date = '01.22.1001'
#date = '1.12.1001'
#date = '-2.10.3001'


print("хард-2. Корректность даты")
date_input = '01.11.1985'
#date_input = '01.22.1001'
#date_input = '1.12.1001'
#date_input = '-2.10.3001'
date = list(date_input.split("."))
if len(date[0]) != 2 or len(date[1]) != 2 or len(date[2]) != 4:
    print("Некоректная запись даты")
else:
    date = list(map(int,date))
    if date[0] <= 0  or date[1] <= 0 or date[2] <= 0:
        print("Дата не может быть отрицательным числом")
    elif date[1] > 12:
        print("В году только 12 месяцев")
    elif (date[1] == 2 or date[1] == 4 or date[1] == 6 or date[1] == 9 or date[1] == 11) and date[0] > 30:
        print(f"В {date[1]} месяце не может быть больше 30 дней")
    elif date[1] > 31:
        print(f"В {date[1]} месяце не может быть больше 31 дня")
    else:
        print(f"Введенная дата {date_input} корректна, в ней {date[0]} дней, {date[1]} месяцев, {date[2]} лет")



# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
# 11 31  32  33  34  35
# 10   27  28  29  30
# 9    23  24  25  26
# 8    19  20  21  22
# 7    15  16  17  18   ...
# 6      12  13  14
# 5      9   10  11
# 4      6   7   8
# 3        4   5
# 2        2   3
# 1          1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

# НАверняка есть какоето красивое математическое решение, но что то уже както не думается перед новым годом, по этому решаем в лоб
print("хард-3. Башня")
user_input = int(input("Введите номер комнаты"))
en = 2
bg = 1
f = 1
i = 1
while True:
    mat = list(range(bg, en))
    if user_input in mat:
        break
    else:
        f += i
        i += 1
        bg = en
        en += i*i
n = mat.index(user_input)
print(f"Номер этажа {f + n // i} порядковый номер слева на этаже {n % i + 1}")

#хард-3. Башня
#Введите номер комнаты 2000000000
#Номер этажа 1650964 порядковый номер слева на этаже 845
