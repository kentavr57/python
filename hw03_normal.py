# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1
print(">>> Функция, возвращающая ряд Фибоначчи с n-элемента до m-элемента")
def fibonacci(n, m):
    i = 1
    f = 1
    fn = 0
    arr =[]
    while i <= m:
        if i >= n:
            arr.append(f)
        f += fn
        fn = f - fn
        i += 1
    return arr


print(fibonacci(5, 11))

# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()
print(">>> Функция, сортирующую принимаемый список по возрастанию")

def sort_to_max(origin_list):
    lenght = len(origin_list)
    for i in range(lenght):
        for j in range(lenght):
            if origin_list[i] < origin_list[j]:
                origin_list[i],origin_list[j] = origin_list[j],origin_list[i]
    return origin_list

print(sort_to_max([2, 10, -12, 2.5, 20, -11, 4, 4, 0]))

# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.
print(">>> Функция, filter")

def filter2(func, lst):
    return [val for val in lst if func(val)]


lst = [1, 2, 3, 4, 5, 6, -6, 0, -5, 7]
func=lambda x: x > 3
print(filter2(func, lst))

# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.


print(">>> Определить, будут ли точки вершинами параллелограмма")
#Находим квадраты длинны сторон (ибо не принципиально квадрат это или нет)
#Для того чтобы убедиться в том что точки могут являтся вершинами параллелограмма, нам достаточно доказать
#что противоположные стороны условной фигуры равны сторона находится по форумуле квадратов сторон
# квадрат гипотенузы равен сумме квадратов катетов
# если стороны равны то и квадраты сторон равны по этому корень вычислять смысла нет
def par(a1, a2, a3, a4):
    s1 = (a2[0]-a1[0])**2 +(a2[1]-a1[1])**2
    s2 = (a3[0]-a2[0])**2 +(a3[1]-a2[1])**2
    s3 = (a4[0]-a3[0])**2 +(a4[1]-a3[1])**2
    s4 = (a1[0]-a4[0])**2 +(a1[1]-a4[1])**2
    if s1 == s3 and s2 == s4 :
        return True
    else:
        return False


def prnt(flag):
    if flag:
        print("данные точки могут являтся вершинами параллелограмма")
    else:
        print("данные точки НЕ могут являтся вершинами параллелограмма")


a1 = (2, 3)
a2 = (3, 5)
a3 = (4, 7)
a4 = (5, 8)
print (f"A1 {a1} A2 {a2} A3 {a3} A4 {a4} ")
prnt(par(a1, a2, a3, a4))
a1 = (3, 6)
a2 = (7, 8)
a3 = (6, 4)
a4 = (2, 2)
print (f"A1 {a1} A2 {a2} A3 {a3} A4 {a4} ")
prnt(par(a1, a2, a3, a4))